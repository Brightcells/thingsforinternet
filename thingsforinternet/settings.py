# -*- coding: utf-8 -*-

"""
Django settings for tt4it project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os


# try:
#     from func_settings import redis_connect
#     REDIS_CACHE = redis_connect(REDIS.get('default', {}))
# except ImportError:
#     REDIS_CACHE = None
# from django_redis_connector import connector


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJ_DIR = os.path.abspath(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0=hpv21&am(7(k5ab!^zjvvl=ntj)^i@7)87t47uzumt_5rq$+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django_file_upload',
    # 'django_short_url',
    'markdown_deux',
    'thingsforinternet',
    'accounts',
    'dh',
    'exchange',
    'huntjob',
    'interview',
    'lab',
    'offer',
    'resources',
    'resume',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mobi2.middleware.MobileDetectionMiddleware',
    'detect.middleware.UserAgentDetectionMiddleware',
]

ROOT_URLCONF = 'thingsforinternet.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'loaders': [
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                ]),
            ],
        },
    },
]

WSGI_APPLICATION = 'thingsforinternet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    # Create Database
    # CREATE DATABASE tt4it DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tt4it',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': 3306,
        'CONN_MAX_AGE': 600,
        'OPTIONS': {
            # Utf8mb4 for Emoji
            #
            # Nickname
            #
            # account.WechatInfo ==> nickname
            #   ALTER TABLE account_wechatinfo MODIFY COLUMN nickname VARCHAR(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
            'charset': 'utf8mb4',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATICFILES_DIRS = (
    os.path.join(PROJ_DIR, 'static').replace('\\', '/'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'collect_static').replace('\\', '/')

STATIC_URL = '/static/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')

MEDIA_URL = '/media/'

# File 设置
FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880  # InMemoryUploadedFile 文件最大值，设置为 5 MB
FILE_UPLOAD_PERMISSIONS = 0o644  # TemporaryUploadedFile 文件权限设置

COOKIE_MAX_AGE = 1 * 30 * 24 * 60 * 60  # one month

# 搜索设置
SEARCH_ENGINE = {
    'google': 'https://www.google.com/search?q=%s',
    'bing': 'http://cn.bing.com/search?q=%s',
    'baidu': 'http://www.baidu.com/s?wd=%s&ie=utf-8',
    'sof': 'http://stackoverflow.com/search?q=%s',
}

# 分页设置
SITE_PER_PAGE = 20
TIPS_PER_PAGE = 99

# 验证码设置
GEE_TEST = {
    'base_url': 'api.geetest.com/get.php?gt=',

    'captcha_id': 'a40fd3b0d712165c5d13e6f747e948d4',
    'private_key': '0f1a37e33c9ed10dd2e133fe2ae9c459',

    # 嵌入式
    # 'product': 'embed',

    # 浮动式
    'product': 'float',

    # 弹出式
    # 'product': 'popup&popupbtnid=submit-button',
}

# 邮件设置
SEND_EMAIL = {
    'username': 'kimi.huang@tt4it.com',
    'password': 'tt4it'
}

# 七牛设置
QINIU = {
    'domain': 'http://7n.tt4it.kaokao.mobi/',
    'access_key': 'm7C_7pGrIvY8tfaYKkYBwfpjGAv7A4ahtMUyrHHp',
    'secret_key': 'hmSPYHvmA2QBJYZk-1hD_w3nyffybERpkwIfdc-t',
    'bucket': 'tt4it',
}

# 图片压缩设置
PNG_QUANT_FILE = '/home/diors/work/pngquant/pngquant'

try:
    from local_settings import *
except ImportError:
    pass

# LOGGER 设置
# python manage.py rlistlog --key=django:logit:tt4it --filename=/tmp/tt4it.logit.log
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        # 'logit': {
        #     'level': 'DEBUG',
        #     'class': 'rlog.RedisListHandler',
        #     'redis_client': REDIS_CACHE,
        #     'key': 'django:logit:tt4it',
        #     'formatter': 'verbose',
        # },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        # 'logit': {
        #     'handlers': ['logit'],
        #     'level': 'DEBUG',
        #     'propagate': True,
        # },
        'console': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# MAX_BIGINT
# Why Not ``sys.maxint``
# n bit platform sys.maxint = 2 ** (n - 1) - 1
# 64 bit 9223372036854775807, 32 bit 2147483647
from django.db.models import BigIntegerField  # isort:skip
MAX_BIGINT = BigIntegerField.MAX_BIGINT
